# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# CI docker VAI env
ARG  BASE_IMAGE=xdock.xilinx.com/vitis-ai-cpu:dev_latest
FROM $BASE_IMAGE

RUN apt-get update --fix-missing

ENV PATH $PATH:$CARGO_HOME/bin:/usr/lib/go-1.10/bin

# Dependencies for ANTLR, NNPACK and Vitis AI
COPY install/ubuntu_install_core.sh \
    install/ubuntu_install_python.sh \
    install/ubuntu_install_python_package.sh \
    install/ubuntu_install_llvm.sh \
    install/ubuntu_install_nnpack.sh \
    install/ubuntu_install_java.sh \
    install/ubuntu_install_vitis_ai_core.sh \
    /install/
RUN /bin/bash -c "/install/ubuntu_install_core.sh" && \
    /bin/bash -c "/install/ubuntu_install_python.sh" && \
    /bin/bash -c "/install/ubuntu_install_python_package.sh" && \
    /bin/bash -c "/install/ubuntu_install_llvm.sh" && \
    /bin/bash -c "/install/ubuntu_install_nnpack.sh" && \
    /bin/bash -c "/install/ubuntu_install_java.sh" && \
    /bin/bash -c "/install/ubuntu_install_vitis_ai_core.sh"
#
# Install dependencies inside vitis-ai-tensorflow conda
RUN . $VAI_ROOT/conda/etc/profile.d/conda.sh && \
    conda activate vitis-ai-tensorflow && \
    pip install onnx mxnet h5py==2.10.0 cffi && \
    pip install --no-cache-dir antlr4-python3-runtime && \
    /bin/bash -c "/install/ubuntu_install_python_package.sh" && \
    rm -rf /var/lib/apt/lists/*

# Install PyXIR
#RUN mkdir -p /build && chmod 0777 /build
WORKDIR /build
SHELL ["/opt/vitis_ai/conda/bin/conda", "run", "-n", "vitis-ai-tensorflow", "/bin/bash", "-c"]

# Install u200/dpuv2 pyxir
RUN git clone --recursive https://github.com/Xilinx/pyxir.git --branch dev && \
    cd pyxir && \
    source /opt/xilinx/xrt/setup.sh && \
    python3 setup.py install --use_vai_rt_dpucadx8g --prefix build
ENV PYTHONPATH=$PYTHONPATH:/build/pyxir/build/lib/python3.6/site-packages/pyxir-0.1.6-py3.6-linux-x86_64.egg
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/build/pyxir/build/lib/python3.6/site-packages/pyxir-0.1.6-py3.6-linux-x86_64.egg

# Install u50/U280 pyxir
RUN git clone --branch dev --recursive https://github.com/Xilinx/pyxir.git pyxir_dpucahx8h && \
    cd pyxir_dpucahx8h && \
    python3 setup.py install --use_vai_rt_dpucahx8h --prefix dpucahx8h 


# Install TVM
RUN git clone --recursive https://github.com/apache/incubator-tvm.git && \
    mkdir -p incubator-tvm/build && \
    source /opt/xilinx/xrt/setup.sh && \
    cp incubator-tvm/cmake/config.cmake incubator-tvm/build/ && \
    cd incubator-tvm/build/ && \
    echo set\(USE_LLVM ON\) >> config.cmake && \
    echo set\(USE_VITIS_AI ON\) >> config.cmake && \
    cmake .. && \
    make -j$(nproc)  
#    cd ../python/ && \
#    pip3 install -e . 
#    #sudo -H python3 -m pip install --install-option="--install-scripts=/usr/local/bin" tvm
# Install DPU
RUN cd /build && \
    wget https://www.xilinx.com/bin/public/openDownload?filename=alveo_xclbin-1.3.0.tar.gz -O alveo_xclbin-1.3.0.tar.gz && \
    tar -xzvf alveo_xclbin-1.3.0.tar.gz && \
    cd alveo_xclbin-1.3.0/U50/6E300M && \
    sudo cp dpu.xclbin hbm_address_assignment.txt /usr/lib

ENV USER="root"

